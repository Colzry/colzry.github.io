<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nginx on Colzry's Blog</title><link>https://blog.colzry.tk/categories/nginx/</link><description>Recent content in Nginx on Colzry's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 Jun 2023 16:41:30 +0800</lastBuildDate><atom:link href="https://blog.colzry.tk/categories/nginx/rss.xml" rel="self" type="application/rss+xml"/><item><title>Nginx location匹配</title><link>https://blog.colzry.tk/posts/nginx/location%E5%8C%B9%E9%85%8D/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/location%E5%8C%B9%E9%85%8D/</guid><description>location语法 location [=|~|~|^~] /url/ { &amp;hellip; } 注：uri是指匹配路径， [ =| ~ | ~ | ^~ | @ ] 是指匹配规则（可选） = : 完全匹配，表示精确匹配后面的url ^~ : 无</description></item><item><title>Nginx 常用命令</title><link>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>nginx -t 测试配置文件 nginx -s reload 修改配置后重载生效 nginx -s reopen 重新打开日志文件 nginx -s stop 快速停止 nginx -s quit</description></item><item><title>Nginx 高级配置</title><link>https://blog.colzry.tk/posts/nginx/%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</guid><description>高级配置 原文地址：https://juejin.cn/post/7112826654291918855 1. Nginx反向代理-负载均衡 首先通过</description></item><item><title>Nginx常用配置</title><link>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</guid><description>1. 跨域配置 server { listen 80; server_name localhost 127.0.0.1; location / { # 允许跨域请求的“域”，此处可以填具体域名、地址或通配符* add_header &amp;#39;Access-Control-Allow-Origin&amp;#39; $http_origin always; # 允许客户端提交Cookie add_header &amp;#39;Access-Control-Allow-Credentials&amp;#39; &amp;#39;true&amp;#39;; # 允许客户</description></item><item><title>SSL证书申请</title><link>https://blog.colzry.tk/posts/nginx/ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</guid><description>1. Acme 脚本申请证书 Acme 脚本申请证书，是我们用到的最常见的一种证书的申请方式，它有很多的申请方法，大家只需要找到一种适合自己的也就好了。 不管用下面</description></item><item><title>编译安装Nginx</title><link>https://blog.colzry.tk/posts/nginx/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</guid><description>编译安装Nginx 1. 卸载原有的Nginx dnf remove nginx nginx-common 2. 安装编译依赖 2.1 安装编译工具 dnf install make automake gcc gcc-c++ kernel-devel 2.2 安装编译时需要的依赖 dnf install -y pcre pcre-devel pcre2 pcre2-devel zlib zlib-devel openssl openssl-devel libxslt-devel 2.3 拉</description></item><item><title>使用Nginx快速搭建文件索引服务</title><link>https://blog.colzry.tk/posts/nginx/%E4%BD%BF%E7%94%A8nginx%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B4%A2%E5%BC%95%E6%9C%8D%E5%8A%A1/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E4%BD%BF%E7%94%A8nginx%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B4%A2%E5%BC%95%E6%9C%8D%E5%8A%A1/</guid><description>使用宝塔面板 在宝塔面板找到Nginx，点击设置，打开配置修改 在http的花括号中添加以下内容 server { listen 80; # 监听80端口 server_name localhost; # 自己PC的ip或者服</description></item></channel></rss>