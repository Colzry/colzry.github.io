<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Colzry's Blog</title><link>https://blog.colzry.tk/posts/</link><description>Recent content in Posts on Colzry's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 Jun 2023 16:41:30 +0800</lastBuildDate><atom:link href="https://blog.colzry.tk/posts/rss.xml" rel="self" type="application/rss+xml"/><item><title>Anaconda的安装和入门</title><link>https://blog.colzry.tk/posts/python/anaconda%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/anaconda%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%85%A5%E9%97%A8/</guid><description>1.0安装 1.1下载 Anaconda 下载地址： https://www.anaconda.com/products/individual#download-section 安装方法：无脑下一步就行(**注意：**若想更改安装目录可自行设置) 1.2配置环境变量 1.2.1 将Anaconda</description></item><item><title>Axios拦截器配置</title><link>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/axios%E6%8B%A6%E6%88%AA%E5%99%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/axios%E6%8B%A6%E6%88%AA%E5%99%A8/</guid><description>import axios from &amp;#34;axios&amp;#34;; import nprogress from &amp;#34;nprogress&amp;#34;; import &amp;#34;nprogress/nprogress.css&amp;#34;; import { Message } from &amp;#34;@arco-design/web-vue&amp;#34;; import { useUserStore } from &amp;#34;@/store/user/index.js&amp;#34;; import router from &amp;#34;@/router/index.js&amp;#34;; const service = axios.create({ //基础路径 baseURL: &amp;#34;/api&amp;#34;, responseType: &amp;#34;json&amp;#34;, headers: { &amp;#39;Content-Type&amp;#39;: &amp;#39;application/json; charset=utf-8&amp;#39; }, //请求不能超过5S timeout: 5000, }); //请求拦截器 service.interceptors.request.use( config =&amp;gt; {</description></item><item><title>BT下载服务搭建</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/bt%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/bt%E4%B8%8B%E8%BD%BD%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</guid><description>github项目地址： https://github.com/P3TERX/aria2.sh 0. 新加入Docker安装 文档地址： https://p3terx.com/archives/docker-aria2-pro.html 0.1 安装aria2 自行替换RPC_SECRET后启动 docker run -d \ --name aria2-pro \ --restart always \ --log-opt max-size=1m \ --network host</description></item><item><title>byobu的使用</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/byobu%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/byobu%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>1.1 安装 sudo apt-get install byobu 命令安装byobu 1.2 登录启动 byobu-enable 表示Byobu窗口管理器将在每次文本登录时自动启动 byobu-disable 表示Byobu窗口管理器将不再在登录时自动启</description></item><item><title>Centos8 KVM 虚拟化</title><link>https://blog.colzry.tk/posts/kvm%E8%99%9A%E6%8B%9F%E5%8C%96/centos8-kvm-%E8%99%9A%E6%8B%9F%E5%8C%96/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/kvm%E8%99%9A%E6%8B%9F%E5%8C%96/centos8-kvm-%E8%99%9A%E6%8B%9F%E5%8C%96/</guid><description>1. 安装Centos8 1.1 下载 Centos8 镜像 下载地址： http://isoredirect.centos.org/centos/8/isos/x86_64/ 1.2 安装Centos8 1.2.1 回车 1.2.2 选择中文 1.2.3 从右到左依次点击配置，先选择安装目的地 1.2.4 配置网络 这时要等待</description></item><item><title>Cloudflare WARP解锁NetFlix</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/cloudflare-warp%E8%A7%A3%E9%94%81netflix/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/cloudflare-warp%E8%A7%A3%E9%94%81netflix/</guid><description>1. 检测是否解锁 #项目地址：https://github.com/sjlleo/netflix-verify #下载检测解锁程序 wget -O nf https://github.com/sjlleo/netflix-verify/releases/download/v3.1.0/nf_linux_amd64 &amp;amp;&amp;amp; chmod +x nf</description></item><item><title>CSS高度塌陷</title><link>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/css%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/css%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7/</guid><description>CSS高度塌陷 .clearfix::before, .clearfix::after { content: &amp;#39;&amp;#39;; display: table; clear: both; }</description></item><item><title>Debian Locale问题</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/debian-locale%E9%97%AE%E9%A2%98/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/debian-locale%E9%97%AE%E9%A2%98/</guid><description>Debian locale问题 问题 root@debian:~# locale -a locale: Cannot set LC_CTYPE to default locale: No such file or directory locale: Cannot set LC_MESSAGES to default locale: No such file or directory locale: Cannot set LC_COLLATE to default locale: No such file or directory C C.UTF-8 POSIX zh_CN.utf8 -bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8) 解决办法 sudo localedef -i en_US</description></item><item><title>Debian安装MySQL</title><link>https://blog.colzry.tk/posts/mysql/debian-%E5%AE%89%E8%A3%85-mysql/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/debian-%E5%AE%89%E8%A3%85-mysql/</guid><description>1. 将 MySQL APT 存储库添加到系统 wget http://repo.mysql.com/mysql-apt-config_0.8.13-1_all.deb sudo dpkg -i mysql-apt-config_0.8.13-1_all.deb # 或者 apt-get install ./mysql-apt-config_0.8.13-1_all.deb 选择第一个，按 Tabel 键到确定进行版本的选择，这里选择了5.7，之后来到OK选择，按Table键确</description></item><item><title>Debian编译网卡驱动(I219-V)</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/debian%E7%BC%96%E8%AF%91%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8i219-v/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/debian%E7%BC%96%E8%AF%91%E7%BD%91%E5%8D%A1%E9%A9%B1%E5%8A%A8i219-v/</guid><description>换源 bash &amp;lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh) 1. 下载网卡驱动 下载e1000e网卡驱动，下载地址 https://downloadcenter.intel.com/zh-cn/download/15817?_ga=1.159975677.114505945.1484457019 2. 配置编译环境 # 查看内核版本 uname -r # 去华农镜像下载对应的linux-header</description></item><item><title>DFS和BFS题型</title><link>https://blog.colzry.tk/posts/%E7%AE%97%E6%B3%95/dfs%E5%92%8Cbfs%E7%9A%84%E9%A2%98%E5%9E%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E7%AE%97%E6%B3%95/dfs%E5%92%8Cbfs%E7%9A%84%E9%A2%98%E5%9E%8B/</guid><description>剪格子 题目描述 问题描述 如下图所示，3 x 3 的格子中填写了一些整数。 +&amp;ndash;&amp;ndash;+&amp;ndash;+ |10 1|52| +&amp;mdash;-+ |20|30* 1| ***&amp;ndash;+ | 1| 2| 3| +&amp;ndash;+&amp;ndash;+&amp;ndash;+ 我们沿着图中的星号线剪开，得到两个部分，每个部分的数</description></item><item><title>DNS服务列表</title><link>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/dns%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/dns%E6%9C%8D%E5%8A%A1%E5%88%97%E8%A1%A8/</guid><description>阿里： IPv4 DNS 地址: 223.5.5.5 223.6.6.6 IPv6 DNS 地址： 2400:3200::1 2400:3200:baba::1 腾讯： 119.29.29.29 119.28.28.28 114: 114.114.114.114 114.114.115.115 Linux 配置DNS sudo vim /etc/resolv.conf nameserver 223.6.6.6 Linux 换源 bash &amp;lt;(curl -sSL https://gitee.com/SuperManito/LinuxMirrors/raw/main/ChangeMirrors.sh)</description></item><item><title>entity、bo、vo、po、dto、pojo如何理解和区分</title><link>https://blog.colzry.tk/posts/java/entitybovopodtopojo%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%92%8C%E5%8C%BA%E5%88%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/entitybovopodtopojo%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%92%8C%E5%8C%BA%E5%88%86/</guid><description>Entity 最常用实体类，基本和数据表一一对应，一个实体一张表。 Bo(business object) 代表业务对象的意思，Bo就是把业务逻辑封装为一个对象（注意是逻辑，业务逻辑），这个</description></item><item><title>ES6箭头函数this指向详解</title><link>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/es6%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84this%E6%8C%87%E5%90%91%E8%AF%A6%E8%A7%A3/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/es6%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84this%E6%8C%87%E5%90%91%E8%AF%A6%E8%A7%A3/</guid><description>箭头函数体内的this对象，就是定义该函数时所在的作用域指向的对象，而不是使用时所在的作用域指向的对象。 举例 var name = &amp;#39;window&amp;#39;; // 其实是window.n</description></item><item><title>Frpc配置文件生成脚本</title><link>https://blog.colzry.tk/posts/ssh/frpc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/ssh/frpc%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%94%9F%E6%88%90%E8%84%9A%E6%9C%AC/</guid><description>#!/bin/bash #================================================================ # Copyright (C) 2022 IEucd Inc. All rights reserved. # # FileName：rand.sh # Author：Colzry, colzry@163.com # CreateDate：2022-10-28 # De</description></item><item><title>FRP内网穿透</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/frpc%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/frpc%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid><description>1. 下载Frp wget https://gitpy.colzry.tk/github.com/fatedier/frp/releases/download/v0.48.0/frp_0.48.0_linux_amd64.tar.gz wget https://github.com/fatedier/frp/releases/download/v0.48.0/frp_0.48.0_linux_amd64.tar.gz 2. 服务端安装 2.1 解压文件 tar -zxvf frp_0.48.0_linux_amd64.tar.gz cd frp_0.48.0_linux_amd64/ cp frps /usr/local/bin/ 2.2 编写配置文件 mkdir /etc/frps vim /etc/frps/frps.ini [common] bind_port = 7000 token = czyadmin 2.3 启动 sudo vim /lib/systemd/system/frps.service [Unit] Description=Frp Server Service After=network.target [Service] Type=simple User=nobody Restart=on-failure RestartSec=5s ExecStart=/usr/local/bin/frps -c /etc/frps/frps.ini ExecReload=/usr/local/bin/frps reload -c /etc/frps/frps.ini</description></item><item><title>GitHub代理加速</title><link>https://blog.colzry.tk/posts/git/github%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/git/github%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F/</guid><description>项目地址： https://github.com/hunshcn/gh-proxy 使用cloudflare免费的代理加速 网址： https://workers.cloudflare.com 先登录或注册 将下面的放入左侧的方框中(不需要任何的改动) &amp;#39;use strict&amp;#39; /** * static files (404.html, sw.js, conf.js) */ const ASSET_URL =</description></item><item><title>Git的基本使用</title><link>https://blog.colzry.tk/posts/git/git%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/git/git%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>1. 设置签名 git config --global user.name tom #设置用户名tom git config --global user.email xxx@qq.com #设置用户邮箱 2. 创建本地仓库 $ git init 3. 版本提交 3.1 状态查看 git status #查看工作区、暂存区状态 3.2 添加 git add</description></item><item><title>Git设置代理</title><link>https://blog.colzry.tk/posts/git/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/git/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</guid><description># 以下使用http代理 git config --global http.proxy http://127.0.0.1:10809 git config --global https.proxy https://127.0.0.1:10809 # 以下使用socks5代理 git config --global http.proxy socks5://127.0.0.1:10808 git config --global https.proxy socks5://127.0.0.1:10808 # 取消代理 git config --global --unset http.proxy git config --global --unset https.proxy git config --global url.&amp;#34;https://gitpy.colzry.tk/&amp;#34;.insteadOf https:// git config --global --remove-section url.&amp;#34;https://gitpy.colzry.tk/&amp;#34;</description></item><item><title>go mod的使用</title><link>https://blog.colzry.tk/posts/golang/go-mod/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/golang/go-mod/</guid><description>常用命令 # 初始化模块 cd &amp;lt;mod_name&amp;gt; go mod init &amp;lt;mod_name&amp;gt; # 删除没用的依赖，下载位拉取的依赖 go mod tidy go mod使用 | 全网最详细</description></item><item><title>go workspace快速使用</title><link>https://blog.colzry.tk/posts/golang/go-workspace/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/golang/go-workspace/</guid><description>常用命令 # 初始化工作区 go work init [dirnames] # 添加模块 go work use [dirnames] 官方博文：Go 1.18工作区模式最佳实践 Go 1.18 workspace 使用初体验_Seekload的博客-CSDN博</description></item><item><title>Gogs服务搭建</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/gogs%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/gogs%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</guid><description>Gogs服务搭建 1. 安装 wget https://github.com/gogs/gogs/releases/download/v0.13.0/gogs_0.13.0_linux_amd64.tar.gz # 网络不好可以使用下面的 wget https://picture-czy.oss-cn-beijing.aliyuncs.com/shareFile/gogs_0.13.0_linux_amd64.tar.gz tar -zxvf gogs_0.13.0_linux_amd64.tar.gz -C /usr/local # 修改目录拥有者，如无用户先添加 U:G chown -R gogs:gogs gogs/ 无用户的先添加用户，并为用户赋予g</description></item><item><title>Golang1.18泛型新特性</title><link>https://blog.colzry.tk/posts/golang/1.18-%E6%B3%9B%E5%9E%8B%E6%96%B0%E7%89%B9%E6%80%A7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/golang/1.18-%E6%B3%9B%E5%9E%8B%E6%96%B0%E7%89%B9%E6%80%A7/</guid><description>Go 1.18 泛型全面讲解：一篇讲清泛型的全部</description></item><item><title>Go语言快速上手</title><link>https://blog.colzry.tk/posts/golang/go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/golang/go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</guid><description>在Linux上安装GoLang wget https://golang.google.cn/dl/go1.19.1.linux-amd64.tar.gz rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.19.1.linux-amd64.tar.gz echo &amp;#39;export PATH=$PATH:/usr/local/go/bin&amp;#39; &amp;gt;&amp;gt; $HOME/.profile source $HOME/.profile go version go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.cn,direct 在Windows上安装GoLang 官网地址 国内镜像地址</description></item><item><title>iperf3的使用</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/iperf3%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/iperf3%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>1. 安装 1.1 linux # Debian sudo apt install iperf3 -y # Centos sudo yum install iperf3 -y 1.2 windows 官网下载地址 2. 使用 2.1 详细命令参数 -p, --port #，Server 端监听、Client 端连接的端口号； -f, --format [km</description></item><item><title>Java多线程同步锁</title><link>https://blog.colzry.tk/posts/java/java-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5%E9%94%81/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/java-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5%E9%94%81/</guid><description>同步监视器必须为唯一的对象 例如：this, *.class 若使用*.class时，报以下错误 则原因为： 线程操作的wait()、notify()、notif</description></item><item><title>JenKins入门</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/jenkins/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/jenkins/</guid><description>1. 安装准备 1.1 安装Docker $ curl -fsSL get.docker.com -o get-docker.sh $ sudo sh get-docker.sh --mirror Aliyun $ sudo systemctl start docker $ sudo systemctl enable docker 1.2 安装docker-compose $ dnf install docker-compose -y 1.3 安装gitlab 拉取g</description></item><item><title>Jupyter lab安装和配置</title><link>https://blog.colzry.tk/posts/python/jupyter-lab-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/jupyter-lab-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</guid><description>通过pip安装 若没有pip可以先安装 sudo apt-get install python3-pip 安装 jupyter-lab pip install jupyterlab 安装中文环境包 pip install jupyterlab-language-pack-zh-CN 配置局域网可以访问 先查看配置文件的位置 jupyter-lab --generate-config 编辑配置文件 sudo vim ~/.jupyter/jupyter_lab_config.py 找到</description></item><item><title>JWT认证</title><link>https://blog.colzry.tk/posts/%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%8A%A0%E5%AF%86/jwt%E8%AE%A4%E8%AF%81/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%8A%A0%E5%AF%86/jwt%E8%AE%A4%E8%AF%81/</guid><description>JWT认证 1. 什么是JWT JSON Web Token（JWT）是一个开放的行业标准（RFC 7519），它定义了一种简洁的、自包含的协议格式，用于在通信双方</description></item><item><title>KMS服务列表</title><link>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/kms/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/kms/</guid><description>激活工具地址 https://github.com/zbezj/HEU_KMS_Activator/releases kms服务器列表 s8.uk.to kms.loli.beer kms.loli.best kms.03k.org kms.cary.tech kms.catqu.com kms.ghpym.com kms.mc06.net kms.sixyin.com win11密钥 VK7JG-NPHTM-C97JM-9MPGT-3V66T W269N-WFGWX-YVC9B-4J6C9-T83GX # Windows专业版和教育版激活 slmgr.vbs -ipk W269N-WFGWX-YVC9B-4J6C9-T83GX slmgr /skms kms.03k.org slmgr /ato # Office专业版和专</description></item><item><title>LambdaQueryWrapper使用</title><link>https://blog.colzry.tk/posts/java/lambdaquerywrapper%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/lambdaquerywrapper%E4%BD%BF%E7%94%A8/</guid><description>// eq用法 LambdaQueryWrapper&amp;lt;News&amp;gt; queryWrapper = new LambdaQueryWrapper&amp;lt;&amp;gt;(); queryWrapper.eq(News::getNid, nid); News news = newsService.getOne(queryWrapper); // select用法 LambdaQueryWrapper&amp;lt;User&amp;gt; queryWrapper = new LambdaQueryWrapper&amp;lt;&amp;gt;(); queryWrapper.eq(User::getUid, uid).select(User::getUid, User::getUsername, User::getIsVip); User user = userService.getOne(queryWrapper); // and用法 Page&amp;lt;User&amp;gt; userPage = new Page&amp;lt;&amp;gt;(pageParam.getPage(), pageParam.getPageSize()); LambdaQueryWrapper&amp;lt;User&amp;gt; queryWrapper = new LambdaQueryWrapper&amp;lt;&amp;gt;(); queryWrapper.eq(User::getType, 1).and(u -&amp;gt; u.eq(User::getStatus, 0)); Page&amp;lt;User&amp;gt; page = userService.page(userPage, queryWrapper);</description></item><item><title>Linux JDK一键安装脚本</title><link>https://blog.colzry.tk/posts/java/linux-jdk-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/linux-jdk-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</guid><description>bash &amp;lt;(curl -Ssl https://picture-czy.oss-cn-beijing.aliyuncs.com/shareFile/jdk-install.sh) 下载不了的话，运行下面脚本 #!/bin/bash set -e java_dist=&amp;#34;/root/jdk-8u202-linux-x64.tar.gz&amp;#34; default_java_dir=&amp;#34;/usr/local&amp;#34; java_dir=&amp;#34;$default_java_dir&amp;#34; SUDO_USER=root function usage() { echo &amp;#34;&amp;#34; echo &amp;#34;这个脚本会自动下载jdk 1.8. &amp;#34; echo &amp;#34;Usage: &amp;#34; echo &amp;#34;install-java.sh -f &amp;lt;java_dist&amp;gt; [-p &amp;lt;java_dir&amp;gt;]&amp;#34; echo &amp;#34;&amp;#34; echo &amp;#34;-f: The jdk tar.gz file. 默认安装</description></item><item><title>Linux usr文件概述</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-usr%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-usr%E6%96%87%E4%BB%B6%E6%A6%82%E8%BF%B0/</guid><description>/bin 存放所有用户皆可用的系统程序，系统启动或者系统修复时可用（在没有挂载 /usr 目录时就可以使用） /sbin 存放超级用户才能使用的系统程序 /usr/bin 存放所有用户都可</description></item><item><title>Linux安装最新的Node(LTS)</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84nodelts/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%9A%84nodelts/</guid><description># 先更新软件源 $ sudo apt-get upadte # 安装npm $ sudo apt install npm # 使用npm全局安装n模块 $ sudo npm install n -g # 安装最新长期支持版node $ sudo n lts # 检查是否安装成功 $ node</description></item><item><title>Linux查看温度</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%9F%A5%E7%9C%8B%E6%B8%A9%E5%BA%A6/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%9F%A5%E7%9C%8B%E6%B8%A9%E5%BA%A6/</guid><description>方法一 pi@RaspberryPi:~ $ /opt/vc/bin/vcgencmd measure_temp temp=51.5&amp;#39;C 方法二 pi@RaspberryPi:~ $ cat /sys/class/thermal/thermal_zone0/temp 50464 此处的数值除以1000，单位是℃。</description></item><item><title>Linux常用命令</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>系统信息 arch #显示机器的处理器架构(1) uname -m #显示机器的处理器架构(2) uname -r #显示正在使用的内核版本 dmidecode -q #显示硬件系统部件 - (SMBIOS / DMI) hdparm -i /dev/hda #罗列</description></item><item><title>Linux创建守护进程</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E5%88%9B%E5%BB%BA%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E5%88%9B%E5%BB%BA%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</guid><description>在 /etc/systemd/system/ 下新建并编辑 xxx.service 文件 这里以 code-server.service 为例 sudo vim /etc/systemd/system/code-server.service 写入下面的内容并根据自己创建的服务进行更改(带注释的为选填，看服务的需求开启) [Unit] Description=code-server #描述要启动的进程</description></item><item><title>Linux磁盘分区、格式化、挂载</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%8C%82%E8%BD%BD/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%8C%82%E8%BD%BD/</guid><description>一、插入U盘或者移动硬盘 1、若是一块新的移动硬盘，则需要对它进行分区和格式化 使用df -h可以查看当前系统中详细的存储设备挂载情况。 使用sud</description></item><item><title>Linux磁盘清理</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E7%A3%81%E7%9B%98%E6%B8%85%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E7%A3%81%E7%9B%98%E6%B8%85%E7%90%86/</guid><description>1. 查看磁盘信息 df -lh 我们可以看见Filesystem下的挂载点 /dev/vda1 下的8.4G容量已经耗尽。接下来就是删除占用磁盘空间大，但又无用的文件。 2. 定位</description></item><item><title>Linux搭建Socks5代理</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86/</guid><description>说明： Socks5属于明文代理，可用于正常的跳板使用； 比如SSH转发加速国外VPS的连接速度，特别是一些延迟高或者丢包高的VPS； 使用Soc</description></item><item><title>Linux搭建WebDav服务</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux%E6%90%AD%E5%BB%BAwebdav%E6%9C%8D%E5%8A%A1/</guid><description>WebDav Server WebDAV 是 GitHub 上开源的项目，基于 Go 语言实现，不仅跨平台，还支持 ARM 架构，可在㠌入式设备中部署 WebDAV 服务器。 项目地址： https://github.com/hacdias/webdav GitHub 下载对应的架构 WebDAV，解</description></item><item><title>Linux防火墙和Cockpit</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E9%98%B2%E7%81%AB%E5%A2%99%E5%92%8Ccockpit/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E9%98%B2%E7%81%AB%E5%A2%99%E5%92%8Ccockpit/</guid><description>1. firewall (RedHat系列) # 查看状态 firewall-cmd --state # 开启防火墙 systemctl start firewalld.service # 关闭并禁用防火墙 systemctl stop firewalld.service systemctl disable firewalld.service # 关闭SElinux 该为disable vim /etc/selinux/config # 开放端口 firewall-cmd</description></item><item><title>Linux科学代理</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux-%E7%A7%91%E5%AD%A6%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/linux-%E7%A7%91%E5%AD%A6%E4%BB%A3%E7%90%86/</guid><description>官方文档： https://v2raya.org/docs/prologue/quick-start/ 安装v2ray内核，使用镜像脚本（不通过添加软件源安装） # v2rayA 提供的镜像脚本 curl -Ls https://mirrors.v2raya.org/go.sh | sudo bash # 安装后可以关掉服务，因为 v2rayA 不依赖于该 systemd 服</description></item><item><title>Linux配置环境变量的建议</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E5%BB%BA%E8%AE%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E5%BB%BA%E8%AE%AE/</guid><description>若是普通用户，则在自己用户目录的.bashrc中配置，若使用了zsh，则在.zshrc中配置 若是root用户，则在/etc/profile.</description></item><item><title>Linux软件批量卸载</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%89%B9%E9%87%8F%E5%8D%B8%E8%BD%BD/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%89%B9%E9%87%8F%E5%8D%B8%E8%BD%BD/</guid><description>rpm -e `rpm -qa | grep python`</description></item><item><title>Linux设置静态IP</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E8%AE%BE%E7%BD%AE%E9%9D%99%E6%80%81ip/</guid><description>Centos 编辑em1对应的配置文件，位于/etc/sysconfig/network-scripts/ifcfg-你的网卡名字 vim /etc/sysconfig/network-scripts/ifcfg-eth0 主要修改BOOTP</description></item><item><title>Linux输入输出重定向</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91/</guid><description>说明 0 标准输入 1 标准输出 2 标准错误 下面命令表示把输出结果重定向到file文件中，而错误重定向到标准输出，此时的标准输出为重定向到file文件</description></item><item><title>Linux隧道脚本</title><link>https://blog.colzry.tk/posts/ssh/linux%E9%9A%A7%E9%81%93%E8%84%9A%E6%9C%AC/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/ssh/linux%E9%9A%A7%E9%81%93%E8%84%9A%E6%9C%AC/</guid><description>#!/bin/bash remote_ip=43.142.174.216 remote_user=&amp;#34;colzry&amp;#34; # 默认转发的目标ip tran_addr=127.0.0.1 # 默认访问的远程端口号 remote_port=5408 if [ $# -lt 1 ] then echo -e &amp;#39;后面至少要有转发的端口号\n&amp;#39; exit fi # 转发的目标端口 tarn_port=$1</description></item><item><title>Linux文件恢复</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D/</guid><description>https://bbs.huaweicloud.com/blogs/345168 dd命令 https://blog.csdn.net/hezhanran/article/details/122662675 文件测速 hdparm -t /dev/sdxx</description></item><item><title>Linux文件拷贝</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux%E6%96%87%E4%BB%B6%E6%8B%B7%E8%B4%9D/</guid><description>scp 推送 scp -r 文件名 目标用户@主机名(host):目标目录 [colzry@hadoop102 ~]$ cd /opt/module/ [colzry@hadoop102 module]$ pwd /opt/module [colzry@hadoop102 module]$ ll 总用量 0 drwxr-xr-x. 9 colzry root 149 9月 12 2019 hadoop-3.1.3 drwxr-xr-x. 7 colzry root 245 4月 2 2019 jdk1.8.0_212 [colzry@hadoop102 module]$ scp -r jdk1.8.0_212/ colzry@hadoop103:/opt/module/ 拉取</description></item><item><title>Linux用户的管理</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/linux-%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid><description>Linux 用户管理 一.用户管理命令 通过系统中的命令对用户进行相应的操作。在讲解命令之前，我们需要了解，在linux操作系统中，以下的几个概念： UID</description></item><item><title>Maven快速入门</title><link>https://blog.colzry.tk/posts/java/maven-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/maven-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid><description>Maven的作用 项目的自动构建，帮助开发人员做项目代码的编译，测试， 打包，安装，部署等工作。 管理依赖（管理项目中使用的各种jar包）。 依赖：</description></item><item><title>MyBatisPlus分页</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/mybatisplus-%E5%88%86%E9%A1%B5/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/mybatisplus-%E5%88%86%E9%A1%B5/</guid><description>1. 添加分页插件 @Configuration public class MybatisPlusConfig { /** * 分页插件 * @return */ @Bean public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor()); return interceptor; } } 2. 使用 先定义PageParam @Data @AllArgsConstructor @NoArgsConstructor public class PageParam { private int page = 1; private int pageSize = 10; }</description></item><item><title>MyBatis教程</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/mybatis%E6%95%99%E7%A8%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/mybatis%E6%95%99%E7%A8%8B/</guid><description>码神之路之Mybatis教程 ORM是什么？ 为什么要将JDBC封装为Mybatis？ 怎么使用Mybatis实现增删改查？ sql注入？ 标签，标签</description></item><item><title>MyBatis使用示例</title><link>https://blog.colzry.tk/posts/java/mybatis%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/java/mybatis%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</guid><description>什么是 MyBatis？ MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和</description></item><item><title>mycli的安装和使用</title><link>https://blog.colzry.tk/posts/mysql/mycli%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/mycli%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description>1. 安装 dnf install python3 pip3 install mycli 2. 使用 mycli -u user -h host database</description></item><item><title>MySQL对用户的管理</title><link>https://blog.colzry.tk/posts/mysql/mysql%E5%AF%B9%E7%94%A8%E6%88%B7%E7%9A%84%E7%AE%A1%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/mysql%E5%AF%B9%E7%94%A8%E6%88%B7%E7%9A%84%E7%AE%A1%E7%90%86/</guid><description>1. 查看用户 use mysql; select * from user; 示例 kylin@kylin:~$ mysql -u root -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 14 Server version: 5.7.33 MySQL Community Server (GPL) Copyright (c) 2000, 2021, Oracle and/or its affiliates. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their</description></item><item><title>MySQL入门</title><link>https://blog.colzry.tk/posts/mysql/mysql%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/mysql%E5%85%A5%E9%97%A8/</guid><description>1. MySQL的介绍 1.1 MySQL的背景 前身属于瑞典的一家公司，MySQL AB 08年被sun公司收购 09年sun被oracle收购 1.2 MySQL的优</description></item><item><title>MySQL数据库的备份和恢复</title><link>https://blog.colzry.tk/posts/mysql/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</guid><description>1. 备份 1.1创建备份脚本 在/usr/local/sbin/下新建mysql_backup.sh sudo vim /usr/local/sbin/mysql_backup.sh 填入下面的内容 #!/bin/bash bakdir=/data/back # 定义备份文件存放目录</description></item><item><title>MySQL一键安装脚本</title><link>https://blog.colzry.tk/posts/mysql/mysql%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/mysql/mysql%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</guid><description>1. 安装脚本 wget https://files.catbox.moe/lwh5vs.sh -O /root/install-mysql.sh &amp;amp;&amp;amp; chmod +x /root/install-mysql.sh &amp;amp;&amp;amp; /root/install-mysql.sh 2. 默认密码 user: root password: admin 3. 其他方式 下载不了的话，运行下面脚本 3.1 使用yum的(建议使用) #!/bin/bash . /etc/init.d/functions SRC_DIR=`pwd` #MYSQL=&amp;#39;mysql-5.7.33-linux-glibc2.12-x86_64.tar.gz&amp;#39; MYSQL=&amp;#39;mysql-5.7.35-linux-glibc2.12-x86_64.tar.gz&amp;#39; COLOR=&amp;#39;echo -e \E[01;31m&amp;#39; END=&amp;#39;\E[0m&amp;#39; MYSQL_ROOT_PASSWORD=admin check (){ if [</description></item><item><title>Netty入门</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/netty/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/netty/</guid><description>0. 前提知识 BIO、NIO和AIO这三个概念分别对应三种通讯模型：阻塞、非阻塞、非阻塞异步 这三个概念的区别如下： BIO：一个连接一个线程，客户</description></item><item><title>NFS服务搭建</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/nfs%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/nfs%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</guid><description>1.安装服务端 # Debian sudo apt install nfs-kernel-server # RedHat sudo yum install rpcbind nfs-utils 2. 更改配置文件 sudo vim /etc/exports 填入一下内容 # * 表示允许任何网段 IP 的系统访问该 NFS 目录 /nfs *(rw,sync,no_root_squash) 配置说明 NFS配置参数权</description></item><item><title>Nginx location匹配</title><link>https://blog.colzry.tk/posts/nginx/location%E5%8C%B9%E9%85%8D/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/location%E5%8C%B9%E9%85%8D/</guid><description>location语法 location [=|~|~|^~] /url/ { &amp;hellip; } 注：uri是指匹配路径， [ =| ~ | ~ | ^~ | @ ] 是指匹配规则（可选） = : 完全匹配，表示精确匹配后面的url ^~ : 无</description></item><item><title>Nginx 常用命令</title><link>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>nginx -t 测试配置文件 nginx -s reload 修改配置后重载生效 nginx -s reopen 重新打开日志文件 nginx -s stop 快速停止 nginx -s quit</description></item><item><title>Nginx 高级配置</title><link>https://blog.colzry.tk/posts/nginx/%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/</guid><description>高级配置 原文地址：https://juejin.cn/post/7112826654291918855 1. Nginx反向代理-负载均衡 首先通过</description></item><item><title>Nginx常用配置</title><link>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</guid><description>1. 跨域配置 server { listen 80; server_name localhost 127.0.0.1; location / { # 允许跨域请求的“域”，此处可以填具体域名、地址或通配符* add_header &amp;#39;Access-Control-Allow-Origin&amp;#39; $http_origin always; # 允许客户端提交Cookie add_header &amp;#39;Access-Control-Allow-Credentials&amp;#39; &amp;#39;true&amp;#39;; # 允许客户</description></item><item><title>Nmap主机扫描</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/nmap%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/nmap%E4%B8%BB%E6%9C%BA%E6%89%AB%E6%8F%8F/</guid><description>ICMP协议探测 nmap -sn -PE -T4 192.168.5.0/24 ARP协议探测 nmap -sn -PR 192.168.5.0/24</description></item><item><title>PicGo配置阿里云OSS</title><link>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/picgo%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91oss/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/picgo%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91oss/</guid><description>1. 打开阿里云RAM访问控制，创建用户 访问链接： https://ram.console.aliyun.com/users 2. 给用户添加权限 3. 打开Bucket列表创建Bucket 链接： https://oss.console.aliyun.com/bucket 4. 点击用户中心，查看或创建Ke</description></item><item><title>pip换源</title><link>https://blog.colzry.tk/posts/python/pip%E6%8D%A2%E6%BA%90/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/pip%E6%8D%A2%E6%BA%90/</guid><description>安装pip 安装脚本链接 python get-pip.py install Linux Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹) 内容如下： [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple [install] trusted-host =</description></item><item><title>Python奇淫技巧</title><link>https://blog.colzry.tk/posts/python/python%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/python%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7/</guid><description>1. 交换 # 交换 a = 3 b = 5 print(f&amp;#39;a: {a}, b: {b}&amp;#39;) a, b = b, a print(f&amp;#39;a: {a}, b: {b}&amp;#39;) # 输出 a: 3, b: 5 a: 5, b: 3 2. yield的使用 # yield的使用 def fibonacci(n): a = 0 b = 1 for _ in range(n): yield a a, b</description></item><item><title>Python视频爬虫</title><link>https://blog.colzry.tk/posts/python/python-%E8%A7%86%E9%A2%91%E7%88%AC%E8%99%AB/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/python-%E8%A7%86%E9%A2%91%E7%88%AC%E8%99%AB/</guid><description>import requests from lxml import etree import re import os import aiohttp import aiofiles import asyncio import shutil from Crypto.Cipher import AES headers = { &amp;#39;user-agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &amp;#39; &amp;#39;AppleWebKit/537.36 (KHTML, like Gecko) &amp;#39; &amp;#39;Chrome/91.0.4472.106 Safari/537.36&amp;#39; } # 下载地址 path = &amp;#34;D:/COLI/&amp;#34; def login(url): session = requests.session() url = url + &amp;#39;login.php?&amp;#39; data = { &amp;#39;pwuser&amp;#39;: &amp;#39;小车</description></item><item><title>Python图片爬虫</title><link>https://blog.colzry.tk/posts/python/python-%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/python/python-%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB/</guid><description>图片爬取1.1 import requests import os from lxml import etree headers = { &amp;#39;user-agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &amp;#39; &amp;#39;AppleWebKit/537.36 (KHTML, like Gecko) &amp;#39; &amp;#39;Chrome/91.0.4472.106 Safari/537.36&amp;#39; } def request(url): response = requests.get(url=url, headers=headers) # 中文乱码处理 response.encoding = &amp;#39;utf-8&amp;#39; return response.text def get_link(url): tree = etree.HTML(request(url)) li_list = tree.xpath(&amp;#39;/html/body/div[2]/div[8]/ul/li&amp;#39;) # print(li_list) for li in li_list: link = &amp;#39;https://www.umei.net&amp;#39; +</description></item><item><title>RabbitMQ入门</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/rabbitmq%E5%85%A5%E9%97%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/rabbitmq%E5%85%A5%E9%97%A8/</guid><description>1. 安装 1.1 docker安装 docker pull rabbitmq:management 默认用户名和密码：guest/guest docker run -dit \ --name rabbitmq \ -p 5672:5672 \ -p 15672:15672 \ rabbitmq:management 端口 作用 15672 管理界面UI的使用端口 15671 管理监听</description></item><item><title>Redis开启远程连接</title><link>https://blog.colzry.tk/posts/redis/redis%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/redis/redis%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</guid><description>让防火墙打开6379端口 修改redis配置文件(/etc/redis/redis.conf) # 允许任何主机连接、访问 bind 127.0.0.1 改为 bind 0.0.0.0 # 关闭保护模</description></item><item><title>Redis设置密码</title><link>https://blog.colzry.tk/posts/redis/redis%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/redis/redis%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81/</guid><description>方法一：通过配置文件（/etc/redis.conf）进行设置 这种方法在设置密码后需要重启redis生效。首先找到redis的配置文件—re</description></item><item><title>Redis挖矿</title><link>https://blog.colzry.tk/posts/redis/redis%E6%8C%96%E7%9F%BF/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/redis/redis%E6%8C%96%E7%9F%BF/</guid><description>1. 首先我们需要一些先决条件 条件一：你首先要有一个Redis，并且我们要知道他的端口【默认6379】； 条件二：Redis的密码不能过于复杂，或</description></item><item><title>Rust的下载和安装</title><link>https://blog.colzry.tk/posts/rust/rust%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/rust/rust%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85/</guid><description>下载 官网地址 下载地址 安装 windows 推荐使用WSL安装 Windows安装 安装器下载地址 https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-gnu/rustup-init.exe 工具链选择 x86_64-pc-windows-gnu 其它的默认就行 配置系统变量环境 CARGO_HOME C:\Users\Colzry.cargo RUSTUP_HOME C:\Users\Colzry.rustup 编辑PATH</description></item><item><title>Rust枚举实现链表</title><link>https://blog.colzry.tk/posts/rust/%E6%9E%9A%E4%B8%BE%E5%AE%9E%E7%8E%B0%E9%93%BE%E8%A1%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/rust/%E6%9E%9A%E4%B8%BE%E5%AE%9E%E7%8E%B0%E9%93%BE%E8%A1%A8/</guid><description>use crate::List::*; enum List { // Cons: 链表中包含有值的节点，节点是元组类型，第一个元素是节点的值，第二个元素是指向下一个节点的指针 Cons(u32, Box&amp;lt;List&amp;gt;), // Nil: 链表中的最后一个节点，用于</description></item><item><title>Rust排序算法</title><link>https://blog.colzry.tk/posts/rust/rust%E7%AE%97%E6%B3%95/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/rust/rust%E7%AE%97%E6%B3%95/</guid><description>1. 归并算法 [dependencies] rand = &amp;#34;0.8.5&amp;#34; stopwatch = &amp;#34;0.0.7&amp;#34; use rand::prelude::*; use stopwatch::Stopwatch; fn merge_sort(arr: &amp;amp;mut [i32]) { if arr.len() &amp;gt; 1 { let mid = arr.len() / 2; merge_sort(&amp;amp;mut arr[..mid]); merge_sort(&amp;amp;mut arr[mid..]); merge(arr, mid); } } fn merge(arr: &amp;amp;mut [i32], mid: usize) { let left = arr[..mid].to_vec(); let right = arr[mid..].to_vec(); let mut l = 0; let mut r = 0; for data in arr {</description></item><item><title>Screen的使用</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/screen%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/screen%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description># 新建会话 screen -S &amp;lt;session_name&amp;gt; # 快捷键Ctrl + A + D 分离当前会话到后台，返回到用户终端 C-a + d # 查看建立的会话 screen -ls # 连接建立的会话 screen -r &amp;lt;session_name&amp;gt; # 杀死建立的会话 screen</description></item><item><title>Shell脚本常用配置</title><link>https://blog.colzry.tk/posts/vim/shell/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/vim/shell/</guid><description>1. 颜色 RED=&amp;#39;\033[31m&amp;#39; GREEN=&amp;#39;\033[32m&amp;#39; YELLOW=&amp;#39;\033[33m&amp;#39; BLUE=&amp;#39;\033[34m&amp;#39; PLAIN=&amp;#39;\033[0m&amp;#39; BOLD=&amp;#39;\033[1m&amp;#39; SUCCESS=&amp;#39;[\033[32mOK\033[0m]&amp;#39; COMPLETE=&amp;#39;[\033[32mDONE\033[0m]&amp;#39; WARN=&amp;#39;[\033[33mWARN\033[0m]&amp;#39; ERROR=&amp;#39;[\033[31mERROR\033[0m]&amp;#39; WORKING=&amp;#39;[\033[34m*\033[0m]&amp;#39; echo -e &amp;#34;\n $SUCCESS success&amp;#34; echo -e &amp;#34;\n $COMPLETE complete&amp;#34; echo -e &amp;#34;\n $WARN warn&amp;#34; echo -e &amp;#34;\n $ERROR error&amp;#34; echo -e &amp;#34;\n $WORKING working&amp;#34; echo -e &amp;#34;\n ${GREEN} green ${PLAIN}&amp;#34; echo -e &amp;#34;\n ${BOLD} bold&amp;#34; 输出结果 2. sed https://www.cnblogs.com/maxincai/p/5146338.html $ cat test.ini [mysql] basedir= datadir= # colzry @ ThinkBooK in ~ [23:30:08]</description></item><item><title>SpeedTest测速</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/speedtest%E6%B5%8B%E9%80%9F/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/speedtest%E6%B5%8B%E9%80%9F/</guid><description>1. 安装脚本 curl -fsSL git.io/speedtest-cli.sh | sudo bash 下载不了可以新建 #!/usr/bin/env bash # # Copyright (c) 2020-2021 P3TERX &amp;lt;https://p3terx.com&amp;gt; # # This is free software, licensed under the MIT License. # See /LICENSE for more information. # # https://github.com/P3TERX/script # File name: speedtest-cli.sh # Description: Install Ookla Speedtest CLI # System Required: GNU/Linux # Version: 1.3 # set -o errexit set</description></item><item><title>SpringBoot AOP</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/springboot-aop/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/springboot-aop/</guid><description>1. 前言 aop面向切面编程，是编程中一个很重要的思想本篇文章主要介绍的是SpringBoot切面Aop的使用和案例 2. 什么是aop AOP（Asp</description></item><item><title>SpringBoot整合Redis</title><link>https://blog.colzry.tk/posts/redis/springboot%E6%95%B4%E5%90%88redis/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/redis/springboot%E6%95%B4%E5%90%88redis/</guid><description>pom.xml引入依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; yml配置 # 服务器端口 server: port: 8848 # Spring Boot 的数据源配置 spring: redis: database: 0 host: localhost # Redis服务器地址 port: 6379 # Redis服务器连接端口</description></item><item><title>SpringSecurity入门</title><link>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/springsecurity/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E5%92%8C%E4%B8%AD%E9%97%B4%E4%BB%B6/springsecurity/</guid><description>1. 快速入门 1.1 创建工程 1.1.1 先创建父工程 1.1.2 将不需要的文件都删除 1.1.3 在该工程中新建Module 1.1.4 引入依赖 父模块依赖 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.3.7.RELEASE&amp;lt;/version&amp;gt; &amp;lt;relativePath/&amp;gt; &amp;lt;!-- lookup parent from</description></item><item><title>SSH防暴力破解</title><link>https://blog.colzry.tk/posts/ssh/ssh%E9%98%B2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/ssh/ssh%E9%98%B2%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</guid><description>1. 添加登录试错次数 vim /etc/pam.d/sshd # 在末尾添加以下内容 auth required pam_tally2.so deny=3 unlock_time=60 even_deny_root root_unlock_time=60 # 解释 even_deny_root 也限制root用户； deny 设置普通用户和root用户连续错误登陆的最大次数，超过</description></item><item><title>SSH免密登录</title><link>https://blog.colzry.tk/posts/ssh/ssh-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/ssh/ssh-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</guid><description>安装 # 安装服务端/客户端(Ubuntu) $ sudo apt install openssh-server/openssh-client # 查看ssh服务是否开启 $ netstat -tlp | grep ssh # 启动/停止/重启 ssh服务 $ sudo /etc/init.d/ssh start/stop/restart ssh服务端配置文</description></item><item><title>SSH隧道</title><link>https://blog.colzry.tk/posts/ssh/ssh%E9%9A%A7%E9%81%93/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/ssh/ssh%E9%9A%A7%E9%81%93/</guid><description>先总结 如果源地址是 ssh client 的某个端口，称为本地转发（Local Port Forwarding），发往 ssh client 指定端口的数据包会经过 ssh server 进行转发； 如果源地址是</description></item><item><title>SSL证书申请</title><link>https://blog.colzry.tk/posts/nginx/ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/ssl%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</guid><description>1. Acme 脚本申请证书 Acme 脚本申请证书，是我们用到的最常见的一种证书的申请方式，它有很多的申请方法，大家只需要找到一种适合自己的也就好了。 不管用下面</description></item><item><title>Sublime Text配置Eclipse快捷键</title><link>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/sublime-text-%E9%85%8D%E7%BD%AE-eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/sublime-text-%E9%85%8D%E7%BD%AE-eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description>{ &amp;#34;keys&amp;#34;: [&amp;#34;alt+/&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;auto_complete&amp;#34; }, { &amp;#34;keys&amp;#34;: [&amp;#34;ctrl+i&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;reindent&amp;#34; }, // 当前行和下面一行交互位置 { &amp;#34;keys&amp;#34;: [&amp;#34;alt+up&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;swap_line_up&amp;#34; }, { &amp;#34;keys&amp;#34;: [&amp;#34;alt+down&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;swap_line_down&amp;#34; }, // 复制当前行到上一行 { &amp;#34;keys&amp;#34;: [&amp;#34;ctrl+alt+up&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;duplicate_line&amp;#34; }, // 复制当前行到下一行 { &amp;#34;keys&amp;#34;: [&amp;#34;ctrl+alt+down&amp;#34;], &amp;#34;command&amp;#34;: &amp;#34;duplicate_line&amp;#34; }, //</description></item><item><title>Tmux的使用</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/tmux%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/tmux%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>Tmux的使用 说明：Ctrl+b 为快捷方式的前缀键，即先按下Ctrl+b，快捷键才会生效。 1. 会话管理 1.1 新建会话 tmux new -s &amp;lt;session-name&amp;gt; 1.2 分离会话 在 Tmux 窗口中，</description></item><item><title>Vim进阶使用</title><link>https://blog.colzry.tk/posts/vim/vim%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/vim/vim%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8/</guid><description>1. 查找和替换 1.1 搜索类命令 输入 / 加上一个字符串可以用以在当前文件中查找该字符串。 1. 在正常模式下输入 / 字符。您此时会注意到该字符和光标都会出现在</description></item><item><title>Vite配置</title><link>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/vite%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/vite%E9%85%8D%E7%BD%AE/</guid><description>vite.config.js import { defineConfig } from &amp;#34;vite&amp;#34;; import { resolve } from &amp;#34;path&amp;#34;; import vue from &amp;#39;@vitejs/plugin-vue&amp;#39;; function pathResolve(dir) { return resolve(__dirname, &amp;#34;.&amp;#34;, dir); } export default defineConfig({ base: &amp;#34;&amp;#34;, plugins:[vue()], resolve: { alias: { &amp;#34;@&amp;#34;: pathResolve(&amp;#34;src&amp;#34;), } }, optimizeDeps: { include: [&amp;#39;axios&amp;#39;], }, build: { target: &amp;#39;modules&amp;#39;, outDir: &amp;#39;dist&amp;#39;, assetsDir: &amp;#39;assets&amp;#39;, minify: &amp;#39;terser&amp;#39; // 混淆器 }, server: { cors: true, open: true, proxy: { &amp;#39;/api&amp;#39;: { target:</description></item><item><title>Vue3路由传参</title><link>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/vue3%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%89%8D%E7%AB%AF/vue3%E8%B7%AF%E7%94%B1%E4%BC%A0%E5%8F%82/</guid><description>Vue3路由传参 方法1：页面刷新数据不会丢失 路由 export default { path: &amp;#39;/product/:productId&amp;#39;, name: &amp;#39;product&amp;#39;, component: Product } 传入方 import router from &amp;#34;@/router/index.js&amp;#34;; router.push(&amp;#34;/product/&amp;#34; + productId) 接收方 import router from &amp;#34;@/router/index.js&amp;#34;; let productId = router.currentRoute.value.params.productId 方法2：使用path来匹配路由</description></item><item><title>X-UI，支持多协议多用户的Xray面板</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/x-ui%E6%94%AF%E6%8C%81%E5%A4%9A%E5%8D%8F%E8%AE%AE%E5%A4%9A%E7%94%A8%E6%88%B7%E7%9A%84-xray-%E9%9D%A2%E6%9D%BF/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/x-ui%E6%94%AF%E6%8C%81%E5%A4%9A%E5%8D%8F%E8%AE%AE%E5%A4%9A%E7%94%A8%E6%88%B7%E7%9A%84-xray-%E9%9D%A2%E6%9D%BF/</guid><description>X-ui，支持多协议多用户的 Xray 面板！ 1.0 安装x-ui x-ui地址： https://github.com/vaxilu/x-ui acme脚本地址： https://github.com/acmesh-official/acme.sh 1.0.1更新及安装组件 apt update -y # Debian/Ubuntu 命令 apt install -y curl #Debian/Ubuntu 命令 apt</description></item><item><title>安装Redis</title><link>https://blog.colzry.tk/posts/redis/%E5%AE%89%E8%A3%85redis/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/redis/%E5%AE%89%E8%A3%85redis/</guid><description>1. 编译安装 wget https://codeload.github.com/redis/redis/tar.gz/refs/tags/7.0.4 -O redis-7.0.4.tar.gz tar zxf redis-7.0.4.tar.gz apt install build-essential cd /redis-7.0.4/src make install cd ../ sed -i &amp;#39;s|daemonize no|daemonize yes|&amp;#39; redis.conf sed -i &amp;#39;s|# supervised auto|supervised no|&amp;#39; redis.conf sed -i &amp;#39;s|bind 127.0.0.1 ::1|bind 0.0.0.0|&amp;#39; redis.conf sed -i &amp;#39;s|protected-mode yes|protected-mode no|&amp;#39; redis.conf sed -i &amp;#39;s|# requirepass foobared|requirepass czyadmin|&amp;#39; redis.conf mkdir /etc/redis cp redis.conf /etc/redis/ /usr/local/bin/redis-server /etc/redis/redis.conf vim /lib/systemd/system/redis.service [Unit] Description=Redis data structure server Documentation=https://redis.io/documentation Wants=network-online.target</description></item><item><title>安装ZHS</title><link>https://blog.colzry.tk/posts/vim/%E5%AE%89%E8%A3%85zhs/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/vim/%E5%AE%89%E8%A3%85zhs/</guid><description># 使用方法 $ git clone https://gitee.com/colzry/my_oh-my-zsh.git $ cd my_oh-my-zsh $ chmod +x install.sh # 注意：如果没有安装zsh，则先安装zsh $ sudo apt install zsh $ ./install.sh $ mv .zshrc ../ # 安装插件 $ git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions $ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting 刷新配置文件 $</description></item><item><title>编译安装Nginx</title><link>https://blog.colzry.tk/posts/nginx/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85nginx/</guid><description>编译安装Nginx 1. 卸载原有的Nginx dnf remove nginx nginx-common 2. 安装编译依赖 2.1 安装编译工具 dnf install make automake gcc gcc-c++ kernel-devel 2.2 安装编译时需要的依赖 dnf install -y pcre pcre-devel pcre2 pcre2-devel zlib zlib-devel openssl openssl-devel libxslt-devel 2.3 拉</description></item><item><title>搭建私有云盘</title><link>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%9C%8D%E5%8A%A1/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E7%9B%98/</guid><description>下载并安装cloudreve GitHub仓库地址： https://github.com/cloudreve/Cloudreve/releases 下载arm版本 上传并解压 # 解压程序包 tar -zxvf cloudreve_VERSION_OS_ARCH.tar.gz # 赋予执行权限 chmod +x ./cloudreve # 启动 Cloudreve ./cloudreve 这个时候控制台会</description></item><item><title>对称加密和非对称加密</title><link>https://blog.colzry.tk/posts/%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%8A%A0%E5%AF%86/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%8A%A0%E5%AF%86/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E4%B8%8E%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</guid><description>对称加密与非对称加密 1. 对称加密 对称加密又叫做私钥加密，即信息的发送方和接收方使用同一个密钥去加密和解密数据。对称加密的特点是算法公开、加密和</description></item><item><title>十大排序算法</title><link>https://blog.colzry.tk/posts/%E7%AE%97%E6%B3%95/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E7%AE%97%E6%B3%95/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid><description>归并排序 算法思想 该算法采用经典的分治（divide-and-conquer）策略，分：问题分成一些小的问题然后递归求解，治：将分的阶段得到的</description></item><item><title>使用Kali爆破WIFI密码</title><link>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E4%BD%BF%E7%94%A8kali%E7%88%86%E7%A0%B4wifi%E5%AF%86%E7%A0%81/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/linux%E6%93%8D%E4%BD%9C/%E4%BD%BF%E7%94%A8kali%E7%88%86%E7%A0%B4wifi%E5%AF%86%E7%A0%81/</guid><description>使用kali爆破WiFi密码 首先准备一个免驱的kali无线网卡 过程 插上无线网卡，让虚拟机的kali连接上无线网卡 打开终端，使用ifconfi</description></item><item><title>使用Nginx快速搭建文件索引服务</title><link>https://blog.colzry.tk/posts/nginx/%E4%BD%BF%E7%94%A8nginx%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B4%A2%E5%BC%95%E6%9C%8D%E5%8A%A1/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/nginx/%E4%BD%BF%E7%94%A8nginx%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E7%B4%A2%E5%BC%95%E6%9C%8D%E5%8A%A1/</guid><description>使用宝塔面板 在宝塔面板找到Nginx，点击设置，打开配置修改 在http的花括号中添加以下内容 server { listen 80; # 监听80端口 server_name localhost; # 自己PC的ip或者服</description></item><item><title>微软拼音添加小鹤双拼</title><link>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E6%B7%BB%E5%8A%A0%E5%B0%8F%E9%B9%A4%E5%8F%8C%E6%8B%BC/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/%E5%85%B6%E4%BB%96/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E6%B7%BB%E5%8A%A0%E5%B0%8F%E9%B9%A4%E5%8F%8C%E6%8B%BC/</guid><description>首先打开注册表，找到这个路径 计算机\HKEY_CURRENT_USER\Software\Microsoft\InputMethod\Set</description></item><item><title>自用Vim配置 SimpleVim</title><link>https://blog.colzry.tk/posts/vim/simplevim/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/vim/simplevim/</guid><description>安装 git clone https://gitee.com/colzry/SimpleVim.git git clone https://github.com/Colzry/SimpleVim.git cd SimpleVim/ bash install.sh 卸载 cd ~/simple-vim/ bash uninstall.sh 使用 vv或者kj 退出插入模式 Ctrl+a 全选 U 光标向下移动5行=5j E 光标向上移动5行=5k = 查找模式时，下一个匹</description></item><item><title>Containerd安装</title><link>https://blog.colzry.tk/posts/docker/containerd%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/containerd%E5%AE%89%E8%A3%85/</guid><description>官方下载地址：https://github.com/containerd/containerd/releases wget https://github.com/containerd/containerd/releases/download/v1.6.8/cri-containerd-cni-1.6.8-linux-amd64.tar.gz mkdir cri-containerd-cni &amp;amp;&amp;amp; tar -zxvf cri-containerd-cni-1.6.8-linux-amd64.tar.gz -C cri-containerd-cni 复制配置</description></item><item><title>Docker换源</title><link>https://blog.colzry.tk/posts/docker/%E6%8D%A2%E6%BA%90/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/%E6%8D%A2%E6%BA%90/</guid><description>Podman换源 网易 hub-mirror.c.163.com USTC docker.mirrors.ustc.edu.cn vim /etc/containers/registries.conf ################################################ unqualified-search-registries = [&amp;#34;docker.io&amp;#34;] [[registry]] prefix = &amp;#34;docker.io&amp;#34; location = &amp;#34;l6p4ic76.mirror.aliyuncs.com&amp;#34; ################################################# Docker换源 vim /etc/docker/daemon.json { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://l6p4ic76.mirror.aliyuncs.com&amp;#34;], &amp;#34;log-driver&amp;#34;:&amp;#34;json-file&amp;#34;, &amp;#34;log-opts&amp;#34;: {&amp;#34;max-size&amp;#34;:&amp;#34;500m&amp;#34;, &amp;#34;max-file&amp;#34;:&amp;#34;3&amp;#34;} } systemctl restart docker &amp;gt; 南京大学 https://docker.nju.edu.cn/ &amp;gt; 网易 http://hub-mirror.c.163.com &amp;gt; 腾讯云 docker hub mirror https://mirror.ccs.tencentyun.com &amp;gt; doc</description></item><item><title>K8S集群部署</title><link>https://blog.colzry.tk/posts/docker/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid><description>官网地址：https://kubernetes.io/zh-cn/docs/setup/production-environment/too</description></item><item><title>安装Docker</title><link>https://blog.colzry.tk/posts/docker/%E5%AE%89%E8%A3%85docker/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/%E5%AE%89%E8%A3%85docker/</guid><description>1. 命令行安装 1.1 卸载旧版本 yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 1.2 安装 执行以下命令安装依赖包： yum install -y yum-utils 鉴于国内网络问题，强烈建议使用国内源</description></item><item><title>使用Docker安装常用环境</title><link>https://blog.colzry.tk/posts/docker/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E7%8E%AF%E5%A2%83/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E7%8E%AF%E5%A2%83/</guid><description>安装Docker $ curl -fsSL get.docker.com -o get-docker.sh $ sudo sh get-docker.sh --mirror Aliyun 卸载 dnf remove -y -q docker-ce docker-ce-cli containerd.io docker-scan-plugin docker-compose-plugin docker-ce-rootless-extras rm -rf 启动 Docker $ sudo systemctl enable docker $ sudo systemctl start docker 建立 docker 用户组 默认情况下，docker 命令会使用</description></item><item><title>树莓派使用Docker安装openwrt作为旁路由(网关服务器)</title><link>https://blog.colzry.tk/posts/docker/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85openwrt%E4%BD%9C%E4%B8%BA%E6%97%81%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sat, 02 Oct 2021 10:10:26 +0800</pubDate><guid>https://blog.colzry.tk/posts/docker/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85openwrt%E4%BD%9C%E4%B8%BA%E6%97%81%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>推荐使用 树莓派爱好基地的arm64无桌面增强版镜像 仓库地址： https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README_zh.md 仓库中有详细的说明文档和下载地址 开始安装openwrt容器 树莓派爱好基地的ar</description></item><item><title>初次安装Git的配置</title><link>https://blog.colzry.tk/posts/git/%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85git%E7%9A%84%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Apr 2021 16:41:30 +0800</pubDate><guid>https://blog.colzry.tk/posts/git/%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85git%E7%9A%84%E9%85%8D%E7%BD%AE/</guid><description>初次运行 Git 前的配置 Git 自带一个 git config 的工具来帮助设置控制 Git 外观和行为的配置变量。 这些变量存储在三个不同的位置： /etc/gitconfig 文件: 包含系统上每一个用户及他们</description></item></channel></rss>